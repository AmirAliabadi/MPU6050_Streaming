var dtw = require('dynamic-time-warping');
var dtw_dtw = require('dtw');

var s = [1,1,2,3,2,0];
var t = [0,1,1,2,3,2,1];


var dtw3 = new dtw.DynamicTimeWarping(
	s,
	t,
	function( a, b ) {
		return Math.abs( a - b );
	}
);

var dtw_xxx = new dtw_dtw();

//console.log(dtw3.getPath());
//console.log(dtw3.getDistance());

//console.log(dtw_xxx.compute(s,t));
//console.log(dtw_xxx.path());

var right_right = [-0.4,-0.4,-0.6,-0.4,-0.6,-0.6,-0.5,-0.7,-0.9,-1,-1.4,-2.3,-4.2,-6.1,-5.8,-6.3,-3,-2.8,-2.8,-2.3,8.4,38.2,83.5,125.6,138.8,145,161.6,207.8,250.1,250.1,250.1,250.1,250.1,250.1,250.1,250.1,148,115.5,125.9,143,133.6,81.7,12.8,-52.3,-103.5,-154.6,-200.7,-245.6,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-229.9,-191.2,-192,-203.6,-205,-182.1,-145.6,-114.6,-85.1,-57.4,-35.7,4.2,100.7,250.1,250.1,250.1,250.1,250.1,250.1,250.1,250.1,250.1,250.1,250.1,225,178.7,128.6,62.7,-5.3,-56.3,-109.6,-167.9,-241.6,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-186.2,-131.1,-97.7,-78.8,-61.7,-41.7,-16.7,0.3,6.1,4.5,3.2,2.9]
var foo_bar =     [-0.4,-0.4,-0.5,-0.5,-0.5,-0.6,-0.5,-0.5,-0.5,-0.8,-0.9,-0.9,-0.7,-0.7,-0.8,-0.6,-0.5,-0.4,-0.4,-0.4,-0.5,-0.6,-0.6,-0.6,-0.2,1.1,-8.8,-44.1,-86.1,-130.6,-172.2,-206.5,-226.3,-222.4,-176.4,-130.2,-104.5,-91.5,-82.2,-61.7,-45.7,-34.3,-24,-13.8,1.1,20.1,37.8,48.1,56.5,63,64.2,66.2,64.7,59.3,47.6,28.9,5.2,-18.4,-44.8,-77.1,-99.9,-107.7,-104.4,-80.9,-32.2,24.6,114.2,250.1,250.1,250.1,250.1,250.1,250.1,250.1,250.1,221.9,23.9,-186.8,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-160.8,-71.3,36.8,179.7,250.1,250.1,250.1,250.1,250.1,250.1,250.1,125,-81.6,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-250.1,-206.9,-95.4,-29.7,-25.4,-56,-79.1,-87.3,-81.3,-71.5,-71,-71.8,-65.8,-51.6,2.3,-30.4,-34.2,-0.6,4.8,6.2,2.5,1.6,1.2,0.8,0.4,0.2,0,-0.1,-0.2,-0.2,-0.2,-0.2,-0.2,-0.3,-0.3,-0.3,-0.3,-0.3,-0.3,-0.3,-0.3,-0.4,-0.4,-0.4,-0.4,-0.4 ] ;

var fixed_data_stream = [];
for( var i=0; i<1000; i ++ ) {
	fixed_data_stream.push(i);
}
for( var x in right_right ) {
	fixed_data_stream.push(right_right[x]);
}
for( var i=0; i<1000; i ++ ) {
	fixed_data_stream.push(i);
}

var arr = [];

var min_score = 99999999;
for( var x=0; x<100000; x++ ) { //var x in fixed_data_stream ) {
	
	if( x < fixed_data_stream.length ) {
		arr.push(fixed_data_stream[x]);
	} else {
		arr.push( 0 );
	}
	
	if( arr.length > 1000 ) {		
		arr.shift();
	}
			
	if( arr.length >= right_right.length ) {
		var dtw_score = dtw_xxx.compute( arr.slice(0,right_right.length), right_right );
		if( dtw_score < min_score ) {
			min_score = dtw_score;
		}
		if( dtw_score < 100.0 ) {
			console.log( dtw_score );
		}
	}
}

console.log( min_score );
